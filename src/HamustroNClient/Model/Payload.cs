// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace HamustroNClient.Model {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Payload {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_Payload__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::HamustroNClient.Model.Payload, global::HamustroNClient.Model.Payload.Builder> internal__static_Payload__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_Collection__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::HamustroNClient.Model.Collection, global::HamustroNClient.Model.Collection.Builder> internal__static_Collection__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static Payload() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "Cg1wYXlsb2FkLnByb3RvInUKB1BheWxvYWQSCgoCYXQYASACKAQSDQoFZXZl", 
              "bnQYAiACKAkSCgoCbnIYAyACKA0SDwoHdXNlcl9pZBgEIAEoDRIKCgJpcBgF", 
              "IAEoCRISCgpwYXJhbWV0ZXJzGAYgASgJEhIKCmlzX3Rlc3RpbmcYByABKAgi", 
              "ugEKCkNvbGxlY3Rpb24SEQoJZGV2aWNlX2lkGAEgAigJEhEKCWNsaWVudF9p", 
              "ZBgCIAIoCRIPCgdzZXNzaW9uGAMgAigJEhYKDnN5c3RlbV92ZXJzaW9uGAQg", 
              "AigJEhcKD3Byb2R1Y3RfdmVyc2lvbhgFIAIoCRIOCgZzeXN0ZW0YBiABKAkS", 
              "GAoQcHJvZHVjdF9naXRfaGFzaBgHIAEoCRIaCghwYXlsb2FkcxgIIAMoCzII", 
            "LlBheWxvYWQ="));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_Payload__Descriptor = Descriptor.MessageTypes[0];
          internal__static_Payload__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::HamustroNClient.Model.Payload, global::HamustroNClient.Model.Payload.Builder>(internal__static_Payload__Descriptor,
                  new string[] { "At", "Event", "Nr", "UserId", "Ip", "Parameters", "IsTesting", });
          internal__static_Collection__Descriptor = Descriptor.MessageTypes[1];
          internal__static_Collection__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::HamustroNClient.Model.Collection, global::HamustroNClient.Model.Collection.Builder>(internal__static_Collection__Descriptor,
                  new string[] { "DeviceId", "ClientId", "Session", "SystemVersion", "ProductVersion", "System", "ProductGitHash", "Payloads", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Payload : pb::GeneratedMessage<Payload, Payload.Builder> {
    private Payload() { }
    private static readonly Payload defaultInstance = new Payload().MakeReadOnly();
    private static readonly string[] _payloadFieldNames = new string[] { "at", "event", "ip", "is_testing", "nr", "parameters", "user_id" };
    private static readonly uint[] _payloadFieldTags = new uint[] { 8, 18, 42, 56, 24, 50, 32 };
    public static Payload DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Payload DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Payload ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::HamustroNClient.Model.Proto.Payload.internal__static_Payload__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Payload, Payload.Builder> InternalFieldAccessors {
      get { return global::HamustroNClient.Model.Proto.Payload.internal__static_Payload__FieldAccessorTable; }
    }
    
    public const int AtFieldNumber = 1;
    private bool hasAt;
    private ulong at_;
    public bool HasAt {
      get { return hasAt; }
    }
    [global::System.CLSCompliant(false)]
    public ulong At {
      get { return at_; }
    }
    
    public const int EventFieldNumber = 2;
    private bool hasEvent;
    private string event_ = "";
    public bool HasEvent {
      get { return hasEvent; }
    }
    public string Event {
      get { return event_; }
    }
    
    public const int NrFieldNumber = 3;
    private bool hasNr;
    private uint nr_;
    public bool HasNr {
      get { return hasNr; }
    }
    [global::System.CLSCompliant(false)]
    public uint Nr {
      get { return nr_; }
    }
    
    public const int UserIdFieldNumber = 4;
    private bool hasUserId;
    private uint userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    [global::System.CLSCompliant(false)]
    public uint UserId {
      get { return userId_; }
    }
    
    public const int IpFieldNumber = 5;
    private bool hasIp;
    private string ip_ = "";
    public bool HasIp {
      get { return hasIp; }
    }
    public string Ip {
      get { return ip_; }
    }
    
    public const int ParametersFieldNumber = 6;
    private bool hasParameters;
    private string parameters_ = "";
    public bool HasParameters {
      get { return hasParameters; }
    }
    public string Parameters {
      get { return parameters_; }
    }
    
    public const int IsTestingFieldNumber = 7;
    private bool hasIsTesting;
    private bool isTesting_;
    public bool HasIsTesting {
      get { return hasIsTesting; }
    }
    public bool IsTesting {
      get { return isTesting_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAt) return false;
        if (!hasEvent) return false;
        if (!hasNr) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _payloadFieldNames;
      if (hasAt) {
        output.WriteUInt64(1, field_names[0], At);
      }
      if (hasEvent) {
        output.WriteString(2, field_names[1], Event);
      }
      if (hasNr) {
        output.WriteUInt32(3, field_names[4], Nr);
      }
      if (hasUserId) {
        output.WriteUInt32(4, field_names[6], UserId);
      }
      if (hasIp) {
        output.WriteString(5, field_names[2], Ip);
      }
      if (hasParameters) {
        output.WriteString(6, field_names[5], Parameters);
      }
      if (hasIsTesting) {
        output.WriteBool(7, field_names[3], IsTesting);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAt) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, At);
      }
      if (hasEvent) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Event);
      }
      if (hasNr) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Nr);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, UserId);
      }
      if (hasIp) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Ip);
      }
      if (hasParameters) {
        size += pb::CodedOutputStream.ComputeStringSize(6, Parameters);
      }
      if (hasIsTesting) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, IsTesting);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Payload ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Payload ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Payload ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Payload ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Payload ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Payload ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Payload ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Payload ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Payload MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Payload prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Payload, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Payload cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Payload result;
      
      private Payload PrepareBuilder() {
        if (resultIsReadOnly) {
          Payload original = result;
          result = new Payload();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Payload MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::HamustroNClient.Model.Payload.Descriptor; }
      }
      
      public override Payload DefaultInstanceForType {
        get { return global::HamustroNClient.Model.Payload.DefaultInstance; }
      }
      
      public override Payload BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Payload) {
          return MergeFrom((Payload) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Payload other) {
        if (other == global::HamustroNClient.Model.Payload.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAt) {
          At = other.At;
        }
        if (other.HasEvent) {
          Event = other.Event;
        }
        if (other.HasNr) {
          Nr = other.Nr;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasIp) {
          Ip = other.Ip;
        }
        if (other.HasParameters) {
          Parameters = other.Parameters;
        }
        if (other.HasIsTesting) {
          IsTesting = other.IsTesting;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_payloadFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _payloadFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAt = input.ReadUInt64(ref result.at_);
              break;
            }
            case 18: {
              result.hasEvent = input.ReadString(ref result.event_);
              break;
            }
            case 24: {
              result.hasNr = input.ReadUInt32(ref result.nr_);
              break;
            }
            case 32: {
              result.hasUserId = input.ReadUInt32(ref result.userId_);
              break;
            }
            case 42: {
              result.hasIp = input.ReadString(ref result.ip_);
              break;
            }
            case 50: {
              result.hasParameters = input.ReadString(ref result.parameters_);
              break;
            }
            case 56: {
              result.hasIsTesting = input.ReadBool(ref result.isTesting_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAt {
        get { return result.hasAt; }
      }
      [global::System.CLSCompliant(false)]
      public ulong At {
        get { return result.At; }
        set { SetAt(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAt(ulong value) {
        PrepareBuilder();
        result.hasAt = true;
        result.at_ = value;
        return this;
      }
      public Builder ClearAt() {
        PrepareBuilder();
        result.hasAt = false;
        result.at_ = 0UL;
        return this;
      }
      
      public bool HasEvent {
        get { return result.hasEvent; }
      }
      public string Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder ClearEvent() {
        PrepareBuilder();
        result.hasEvent = false;
        result.event_ = "";
        return this;
      }
      
      public bool HasNr {
        get { return result.hasNr; }
      }
      [global::System.CLSCompliant(false)]
      public uint Nr {
        get { return result.Nr; }
        set { SetNr(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNr(uint value) {
        PrepareBuilder();
        result.hasNr = true;
        result.nr_ = value;
        return this;
      }
      public Builder ClearNr() {
        PrepareBuilder();
        result.hasNr = false;
        result.nr_ = 0;
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      [global::System.CLSCompliant(false)]
      public uint UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUserId(uint value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasIp {
        get { return result.hasIp; }
      }
      public string Ip {
        get { return result.Ip; }
        set { SetIp(value); }
      }
      public Builder SetIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIp = true;
        result.ip_ = value;
        return this;
      }
      public Builder ClearIp() {
        PrepareBuilder();
        result.hasIp = false;
        result.ip_ = "";
        return this;
      }
      
      public bool HasParameters {
        get { return result.hasParameters; }
      }
      public string Parameters {
        get { return result.Parameters; }
        set { SetParameters(value); }
      }
      public Builder SetParameters(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParameters = true;
        result.parameters_ = value;
        return this;
      }
      public Builder ClearParameters() {
        PrepareBuilder();
        result.hasParameters = false;
        result.parameters_ = "";
        return this;
      }
      
      public bool HasIsTesting {
        get { return result.hasIsTesting; }
      }
      public bool IsTesting {
        get { return result.IsTesting; }
        set { SetIsTesting(value); }
      }
      public Builder SetIsTesting(bool value) {
        PrepareBuilder();
        result.hasIsTesting = true;
        result.isTesting_ = value;
        return this;
      }
      public Builder ClearIsTesting() {
        PrepareBuilder();
        result.hasIsTesting = false;
        result.isTesting_ = false;
        return this;
      }
    }
    static Payload() {
      object.ReferenceEquals(global::HamustroNClient.Model.Proto.Payload.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Collection : pb::GeneratedMessage<Collection, Collection.Builder> {
    private Collection() { }
    private static readonly Collection defaultInstance = new Collection().MakeReadOnly();
    private static readonly string[] _collectionFieldNames = new string[] { "client_id", "device_id", "payloads", "product_git_hash", "product_version", "session", "system", "system_version" };
    private static readonly uint[] _collectionFieldTags = new uint[] { 18, 10, 66, 58, 42, 26, 50, 34 };
    public static Collection DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Collection DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Collection ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::HamustroNClient.Model.Proto.Payload.internal__static_Collection__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Collection, Collection.Builder> InternalFieldAccessors {
      get { return global::HamustroNClient.Model.Proto.Payload.internal__static_Collection__FieldAccessorTable; }
    }
    
    public const int DeviceIdFieldNumber = 1;
    private bool hasDeviceId;
    private string deviceId_ = "";
    public bool HasDeviceId {
      get { return hasDeviceId; }
    }
    public string DeviceId {
      get { return deviceId_; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private string clientId_ = "";
    public bool HasClientId {
      get { return hasClientId; }
    }
    public string ClientId {
      get { return clientId_; }
    }
    
    public const int SessionFieldNumber = 3;
    private bool hasSession;
    private string session_ = "";
    public bool HasSession {
      get { return hasSession; }
    }
    public string Session {
      get { return session_; }
    }
    
    public const int SystemVersionFieldNumber = 4;
    private bool hasSystemVersion;
    private string systemVersion_ = "";
    public bool HasSystemVersion {
      get { return hasSystemVersion; }
    }
    public string SystemVersion {
      get { return systemVersion_; }
    }
    
    public const int ProductVersionFieldNumber = 5;
    private bool hasProductVersion;
    private string productVersion_ = "";
    public bool HasProductVersion {
      get { return hasProductVersion; }
    }
    public string ProductVersion {
      get { return productVersion_; }
    }
    
    public const int SystemFieldNumber = 6;
    private bool hasSystem;
    private string system_ = "";
    public bool HasSystem {
      get { return hasSystem; }
    }
    public string System {
      get { return system_; }
    }
    
    public const int ProductGitHashFieldNumber = 7;
    private bool hasProductGitHash;
    private string productGitHash_ = "";
    public bool HasProductGitHash {
      get { return hasProductGitHash; }
    }
    public string ProductGitHash {
      get { return productGitHash_; }
    }
    
    public const int PayloadsFieldNumber = 8;
    private pbc::PopsicleList<global::HamustroNClient.Model.Payload> payloads_ = new pbc::PopsicleList<global::HamustroNClient.Model.Payload>();
    public scg::IList<global::HamustroNClient.Model.Payload> PayloadsList {
      get { return payloads_; }
    }
    public int PayloadsCount {
      get { return payloads_.Count; }
    }
    public global::HamustroNClient.Model.Payload GetPayloads(int index) {
      return payloads_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDeviceId) return false;
        if (!hasClientId) return false;
        if (!hasSession) return false;
        if (!hasSystemVersion) return false;
        if (!hasProductVersion) return false;
        foreach (global::HamustroNClient.Model.Payload element in PayloadsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _collectionFieldNames;
      if (hasDeviceId) {
        output.WriteString(1, field_names[1], DeviceId);
      }
      if (hasClientId) {
        output.WriteString(2, field_names[0], ClientId);
      }
      if (hasSession) {
        output.WriteString(3, field_names[5], Session);
      }
      if (hasSystemVersion) {
        output.WriteString(4, field_names[7], SystemVersion);
      }
      if (hasProductVersion) {
        output.WriteString(5, field_names[4], ProductVersion);
      }
      if (hasSystem) {
        output.WriteString(6, field_names[6], System);
      }
      if (hasProductGitHash) {
        output.WriteString(7, field_names[3], ProductGitHash);
      }
      if (payloads_.Count > 0) {
        output.WriteMessageArray(8, field_names[2], payloads_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDeviceId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, DeviceId);
      }
      if (hasClientId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientId);
      }
      if (hasSession) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Session);
      }
      if (hasSystemVersion) {
        size += pb::CodedOutputStream.ComputeStringSize(4, SystemVersion);
      }
      if (hasProductVersion) {
        size += pb::CodedOutputStream.ComputeStringSize(5, ProductVersion);
      }
      if (hasSystem) {
        size += pb::CodedOutputStream.ComputeStringSize(6, System);
      }
      if (hasProductGitHash) {
        size += pb::CodedOutputStream.ComputeStringSize(7, ProductGitHash);
      }
      foreach (global::HamustroNClient.Model.Payload element in PayloadsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Collection ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collection ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collection ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collection ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collection ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collection ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Collection ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Collection ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Collection ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collection ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Collection MakeReadOnly() {
      payloads_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Collection prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Collection, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Collection cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Collection result;
      
      private Collection PrepareBuilder() {
        if (resultIsReadOnly) {
          Collection original = result;
          result = new Collection();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Collection MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::HamustroNClient.Model.Collection.Descriptor; }
      }
      
      public override Collection DefaultInstanceForType {
        get { return global::HamustroNClient.Model.Collection.DefaultInstance; }
      }
      
      public override Collection BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Collection) {
          return MergeFrom((Collection) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Collection other) {
        if (other == global::HamustroNClient.Model.Collection.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDeviceId) {
          DeviceId = other.DeviceId;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasSession) {
          Session = other.Session;
        }
        if (other.HasSystemVersion) {
          SystemVersion = other.SystemVersion;
        }
        if (other.HasProductVersion) {
          ProductVersion = other.ProductVersion;
        }
        if (other.HasSystem) {
          System = other.System;
        }
        if (other.HasProductGitHash) {
          ProductGitHash = other.ProductGitHash;
        }
        if (other.payloads_.Count != 0) {
          result.payloads_.Add(other.payloads_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_collectionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _collectionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDeviceId = input.ReadString(ref result.deviceId_);
              break;
            }
            case 18: {
              result.hasClientId = input.ReadString(ref result.clientId_);
              break;
            }
            case 26: {
              result.hasSession = input.ReadString(ref result.session_);
              break;
            }
            case 34: {
              result.hasSystemVersion = input.ReadString(ref result.systemVersion_);
              break;
            }
            case 42: {
              result.hasProductVersion = input.ReadString(ref result.productVersion_);
              break;
            }
            case 50: {
              result.hasSystem = input.ReadString(ref result.system_);
              break;
            }
            case 58: {
              result.hasProductGitHash = input.ReadString(ref result.productGitHash_);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.payloads_, global::HamustroNClient.Model.Payload.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDeviceId {
        get { return result.hasDeviceId; }
      }
      public string DeviceId {
        get { return result.DeviceId; }
        set { SetDeviceId(value); }
      }
      public Builder SetDeviceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceId = true;
        result.deviceId_ = value;
        return this;
      }
      public Builder ClearDeviceId() {
        PrepareBuilder();
        result.hasDeviceId = false;
        result.deviceId_ = "";
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public string ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = "";
        return this;
      }
      
      public bool HasSession {
        get { return result.hasSession; }
      }
      public string Session {
        get { return result.Session; }
        set { SetSession(value); }
      }
      public Builder SetSession(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSession = true;
        result.session_ = value;
        return this;
      }
      public Builder ClearSession() {
        PrepareBuilder();
        result.hasSession = false;
        result.session_ = "";
        return this;
      }
      
      public bool HasSystemVersion {
        get { return result.hasSystemVersion; }
      }
      public string SystemVersion {
        get { return result.SystemVersion; }
        set { SetSystemVersion(value); }
      }
      public Builder SetSystemVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSystemVersion = true;
        result.systemVersion_ = value;
        return this;
      }
      public Builder ClearSystemVersion() {
        PrepareBuilder();
        result.hasSystemVersion = false;
        result.systemVersion_ = "";
        return this;
      }
      
      public bool HasProductVersion {
        get { return result.hasProductVersion; }
      }
      public string ProductVersion {
        get { return result.ProductVersion; }
        set { SetProductVersion(value); }
      }
      public Builder SetProductVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProductVersion = true;
        result.productVersion_ = value;
        return this;
      }
      public Builder ClearProductVersion() {
        PrepareBuilder();
        result.hasProductVersion = false;
        result.productVersion_ = "";
        return this;
      }
      
      public bool HasSystem {
        get { return result.hasSystem; }
      }
      public string System {
        get { return result.System; }
        set { SetSystem(value); }
      }
      public Builder SetSystem(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSystem = true;
        result.system_ = value;
        return this;
      }
      public Builder ClearSystem() {
        PrepareBuilder();
        result.hasSystem = false;
        result.system_ = "";
        return this;
      }
      
      public bool HasProductGitHash {
        get { return result.hasProductGitHash; }
      }
      public string ProductGitHash {
        get { return result.ProductGitHash; }
        set { SetProductGitHash(value); }
      }
      public Builder SetProductGitHash(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProductGitHash = true;
        result.productGitHash_ = value;
        return this;
      }
      public Builder ClearProductGitHash() {
        PrepareBuilder();
        result.hasProductGitHash = false;
        result.productGitHash_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::HamustroNClient.Model.Payload> PayloadsList {
        get { return PrepareBuilder().payloads_; }
      }
      public int PayloadsCount {
        get { return result.PayloadsCount; }
      }
      public global::HamustroNClient.Model.Payload GetPayloads(int index) {
        return result.GetPayloads(index);
      }
      public Builder SetPayloads(int index, global::HamustroNClient.Model.Payload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.payloads_[index] = value;
        return this;
      }
      public Builder SetPayloads(int index, global::HamustroNClient.Model.Payload.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.payloads_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPayloads(global::HamustroNClient.Model.Payload value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.payloads_.Add(value);
        return this;
      }
      public Builder AddPayloads(global::HamustroNClient.Model.Payload.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.payloads_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePayloads(scg::IEnumerable<global::HamustroNClient.Model.Payload> values) {
        PrepareBuilder();
        result.payloads_.Add(values);
        return this;
      }
      public Builder ClearPayloads() {
        PrepareBuilder();
        result.payloads_.Clear();
        return this;
      }
    }
    static Collection() {
      object.ReferenceEquals(global::HamustroNClient.Model.Proto.Payload.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
